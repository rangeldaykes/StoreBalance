// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreBalance.WebApi.Infrastructure.DatabaseSql;

namespace StoreBalance.WebApi.Migrations
{
    [DbContext(typeof(StoreBalanceContext))]
    partial class StoreBalanceContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("StoreBalance.WebApi.Domain.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tb_wallet");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf57b5b4-9349-45ca-a7a8-463f85edb14c"),
                            Balance = 1000.00m,
                            CreatedAt = new DateTime(2021, 2, 2, 12, 59, 5, 238, DateTimeKind.Local).AddTicks(3270),
                            UserId = new Guid("a12eedb1-7853-4800-b927-e48071834785")
                        });
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.WalletRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AppliedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ApplyAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RecordType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppliedAt");

                    b.HasIndex("ApplyAt");

                    b.HasIndex("RecordType");

                    b.HasIndex("WalletId");

                    b.ToTable("tb_wallet_record");

                    b.HasData(
                        new
                        {
                            Id = new Guid("92cd97fc-49d9-4f90-8aba-9fceb15de160"),
                            ApplyAt = new DateTime(2021, 1, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 2, 2, 12, 59, 5, 252, DateTimeKind.Local).AddTicks(3691),
                            RecordType = 0,
                            Value = 10.00m,
                            WalletId = new Guid("a7609d17-9337-423f-b20d-170795fa629c")
                        },
                        new
                        {
                            Id = new Guid("b5015c5d-bbe6-4c2e-96c1-781054c877ac"),
                            ApplyAt = new DateTime(2021, 1, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 2, 2, 12, 59, 5, 252, DateTimeKind.Local).AddTicks(3754),
                            RecordType = 1,
                            Value = 11.50m,
                            WalletId = new Guid("a7609d17-9337-423f-b20d-170795fa629c")
                        },
                        new
                        {
                            Id = new Guid("bfb0fee2-cedf-4a4f-aa27-262c7eb73119"),
                            ApplyAt = new DateTime(2021, 2, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedAt = new DateTime(2021, 2, 2, 12, 59, 5, 252, DateTimeKind.Local).AddTicks(3759),
                            RecordType = 0,
                            Value = 10.00m,
                            WalletId = new Guid("a7609d17-9337-423f-b20d-170795fa629c")
                        });
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.WalletRecord", b =>
                {
                    b.HasOne("StoreBalance.WebApi.Domain.Wallet", "Wallet")
                        .WithMany("WalletRecords")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.Wallet", b =>
                {
                    b.Navigation("WalletRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
