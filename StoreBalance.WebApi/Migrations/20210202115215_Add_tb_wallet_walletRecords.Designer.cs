// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using StoreBalance.WebApi.Infrastructure.DatabaseSql;

namespace StoreBalance.WebApi.Migrations
{
    [DbContext(typeof(StoreBalanceContext))]
    [Migration("20210202115215_Add_tb_wallet_walletRecords")]
    partial class Add_tb_wallet_walletRecords
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("StoreBalance.WebApi.Domain.Wallet", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<decimal>("Balance")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("tb_wallet");
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.WalletRecords", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uuid");

                    b.Property<DateTime?>("AppliedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("ApplyAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("RecordType")
                        .HasColumnType("integer");

                    b.Property<decimal>("Value")
                        .HasColumnType("numeric");

                    b.Property<Guid>("WalletId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("AppliedAt");

                    b.HasIndex("ApplyAt");

                    b.HasIndex("RecordType");

                    b.HasIndex("WalletId");

                    b.ToTable("tb_wallet_record");
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.WalletRecords", b =>
                {
                    b.HasOne("StoreBalance.WebApi.Domain.Wallet", "Wallet")
                        .WithMany("WalletRecords")
                        .HasForeignKey("WalletId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Wallet");
                });

            modelBuilder.Entity("StoreBalance.WebApi.Domain.Wallet", b =>
                {
                    b.Navigation("WalletRecords");
                });
#pragma warning restore 612, 618
        }
    }
}
